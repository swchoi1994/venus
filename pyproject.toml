[build-system]
requires = ["setuptools>=61.0", "wheel", "cmake>=3.18", "ninja", "pybind11>=2.11"]
build-backend = "setuptools.build_meta"

[project]
name = "venus-inference"
version = "0.1.0"
description = "Ultra-fast universal LLM inference engine - As easy as vLLM, as fast as Groq"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "Venus Team", email = "contact@venus.ai"}]
requires-python = ">=3.8"
keywords = ["llm", "inference", "transformers", "deep-learning", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "numpy>=1.19.0",
    "torch>=2.0.0",
    "transformers>=4.35.0",
    "huggingface-hub>=0.19.0",
    "safetensors>=0.4.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "tqdm>=4.65.0",
    "psutil>=5.9.0",
    "py-cpuinfo>=9.0.0",
    "aiofiles>=23.0.0",
    "packaging>=23.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "ipython>=8.0.0",
]

cuda = [
    "nvidia-ml-py>=12.0.0",
    "pynvml>=11.5.0",
]

all = ["venus-inference[dev,cuda]"]

[project.urls]
Homepage = "https://github.com/yourusername/venus"
Documentation = "https://venus-inference.readthedocs.io"
Repository = "https://github.com/yourusername/venus"
Issues = "https://github.com/yourusername/venus/issues"

[project.scripts]
venus = "venus.cli:main"
venus-server = "venus.server:main"
venus-benchmark = "venus.benchmark:main"

[tool.setuptools]
packages = ["venus", "venus._C"]
include-package-data = true

[tool.setuptools.package-data]
"venus._C" = ["*.so", "*.dylib", "*.dll", "*.pyd"]
"venus.configs" = ["*.yaml", "*.json"]

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true